{
  "summary": {
    "total_operations": 4,
    "successful_operations": 4,
    "failed_operations": 0,
    "success_rate": 100.0,
    "total_execution_time": 0.7516672611236572,
    "execution_date": "2025-09-10T13:06:04.549583"
  },
  "operations": [
    {
      "command": "data clean",
      "success": true,
      "returncode": 0,
      "stdout": "\n╔════════════════════════════════════════════════════════════════╗\n║                    套利系统5.1 命令行控制器                      ║\n║                     Arbitrage System 5.1 CLI                  ║\n╠════════════════════════════════════════════════════════════════╣\n║  版本: v1.0.0                                                  ║\n║  支持: 387个API接口 | 7个微服务 | 4个交易所                      ║\n║  功能: 数据处理 | 策略执行 | AI风控 | 模型训练                   ║\n╚════════════════════════════════════════════════════════════════╝\n        \n\n🧹 执行全量数据清洗...\n❌ 数据清洗失败: Unknown error\n",
      "stderr": "",
      "execution_time": 0.18813681602478027,
      "timestamp": "2025-09-10T13:05:59.982050",
      "operation_name": "数据清洗 - 全部",
      "attempt": 1
    },
    {
      "command": "ai models",
      "success": true,
      "returncode": 0,
      "stdout": "\n╔════════════════════════════════════════════════════════════════╗\n║                    套利系统5.1 命令行控制器                      ║\n║                     Arbitrage System 5.1 CLI                  ║\n╠════════════════════════════════════════════════════════════════╣\n║  版本: v1.0.0                                                  ║\n║  支持: 387个API接口 | 7个微服务 | 4个交易所                      ║\n║  功能: 数据处理 | 策略执行 | AI风控 | 模型训练                   ║\n╚════════════════════════════════════════════════════════════════╝\n        \n\n🤖 AI模型列表:\n============================================================\n❌ 无法获取AI模型列表\n",
      "stderr": "",
      "execution_time": 0.18963265419006348,
      "timestamp": "2025-09-10T13:06:02.173920",
      "operation_name": "AI模型状态检查",
      "attempt": 1
    },
    {
      "command": "risk status",
      "success": true,
      "returncode": 0,
      "stdout": "\n╔════════════════════════════════════════════════════════════════╗\n║                    套利系统5.1 命令行控制器                      ║\n║                     Arbitrage System 5.1 CLI                  ║\n╠════════════════════════════════════════════════════════════════╣\n║  版本: v1.0.0                                                  ║\n║  支持: 387个API接口 | 7个微服务 | 4个交易所                      ║\n║  功能: 数据处理 | 策略执行 | AI风控 | 模型训练                   ║\n╚════════════════════════════════════════════════════════════════╝\n        \n\n🛡️ AI风控系统状态:\n============================================================\n❌ 无法获取风控状态\n",
      "stderr": "",
      "execution_time": 0.18684029579162598,
      "timestamp": "2025-09-10T13:06:03.361901",
      "operation_name": "风控状态检查",
      "attempt": 1
    },
    {
      "command": "strategy status",
      "success": true,
      "returncode": 0,
      "stdout": "\n╔════════════════════════════════════════════════════════════════╗\n║                    套利系统5.1 命令行控制器                      ║\n║                     Arbitrage System 5.1 CLI                  ║\n╠════════════════════════════════════════════════════════════════╣\n║  版本: v1.0.0                                                  ║\n║  支持: 387个API接口 | 7个微服务 | 4个交易所                      ║\n║  功能: 数据处理 | 策略执行 | AI风控 | 模型训练                   ║\n╚════════════════════════════════════════════════════════════════╝\n        \n\n📊 所有策略状态:\n============================================================\n📊 策略概览 (5 个组件):\n  🟢💚 Strategy adapters         - CPU: 0.0% | 内存: 6146MB\n  🟢💚 Strategy common           - CPU: 0.0% | 内存: 6149MB\n  🟢💚 Strategy Strategy         - CPU: 0.0% | 内存: 6150MB\n  🟢💚 Strategy orchestrator     - CPU: 0.0% | 内存: 6149MB\n  🟢💚 Strategy shadow trading   - CPU: 0.0% | 内存: 6148MB\n\n📈 状态统计:\n  运行中: 5/5\n  健康: 5/5\n  整体状态: 正常\n",
      "stderr": "",
      "execution_time": 0.1870574951171875,
      "timestamp": "2025-09-10T13:06:04.549527",
      "operation_name": "策略状态检查",
      "attempt": 1
    }
  ]
}