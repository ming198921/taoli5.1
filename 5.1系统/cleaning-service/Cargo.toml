[package]
name = "cleaning-service"
version = "1.0.0"
edition = "2021"

[workspace]

[[bin]]
name = "cleaning-service"
path = "src/main.rs"

[dependencies]
# Web框架
axum = { version = "0.7", features = ["macros"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace", "compression-gzip"] }

# 异步运行时
tokio = { version = "1.35", features = ["full"] }

# 序列化
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# 数据库
sqlx = { version = "0.7", features = ["runtime-tokio", "postgres", "chrono", "uuid"] }

# 日志
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# 错误处理
thiserror = "1.0"
anyhow = "1.0"

# 工具
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.6", features = ["v4", "serde"] }
regex = "1.10"

# 🔥 终极AVX-512性能优化依赖 - 目标50-250μs数据清洗 (2倍性能提升)
rayon = "1.8"                                    # 并行处理
wide = { version = "0.7", features = ["std"] }   # SIMD向量化操作 (支持AVX-512)
pdqsort = "1.0"                                  # Pattern-defeating quicksort (v3+o1算法)
crossbeam = "0.8"                                # 无锁数据结构
parking_lot = "0.12"                             # 超快锁替换std::sync
dashmap = "5.5"                                  # 无锁HashMap
mimalloc = { version = "0.1", default-features = false } # 高性能内存分配器
tinyvec = { version = "1.6", features = ["alloc"] } # 优化小向量性能
# AVX-512专用优化库 - 完整实现
raw-cpuid = "11.0"                                            # CPU特性检测
# 注意: 使用std::arch::x86_64内置AVX-512指令，无需额外依赖